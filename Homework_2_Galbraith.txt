#Problem 2
import numpy as np
import matplotlib.pyplot as plt

import numpy as np
import matplotlib.pyplot as plt

x = np.linspace(-100, 100, 1000)  # Linear scale
x_log = np.logspace(-2, 2, 1000)  # Log scale
y = x**4
y_log = x_log**4
log_y = np.log10(y)
fig, axes = plt.subplots(1, 3, figsize=(18, 6))

# Linear Plot
axes[0].plot(x, y, color='mediumaquamarine', linestyle='-', linewidth=2)
axes[0].set_xlabel('x', fontsize=14)
axes[0].set_ylabel('y', fontsize=14)
axes[0].set_title('Linear Plot', fontsize=16)
axes[0].grid(True)
axes[0].tick_params(labelsize=12)
axes[0].set_ylim([0, np.max(y)])

# Log log plot
axes[1].loglog(x_log, y_log, color='lightcoral', linestyle='--', marker='o', markevery=50, linewidth=2)
axes[1].set_xlabel('log(x)', fontsize=14)
axes[1].set_ylabel('log(y)', fontsize=14)
axes[1].set_title('Log-Log Plot', fontsize=16)
axes[1].grid(True, which='both', linestyle='--')
axes[1].tick_params(labelsize=12)

# Linear Log Plot
axes[2].plot(x, log_y, color='palevioletred', linestyle='-.', marker='^', markevery=50, linewidth=2)
axes[2].set_xlabel('x', fontsize=14)
axes[2].set_ylabel('$\log_{10}(y)$', fontsize=14)
axes[2].set_title('Log Linear Plot', fontsize=16)
axes[2].grid(True)
axes[2].tick_params(labelsize=12)

axes[0].set_aspect('auto')
axes[1].set_aspect('equal')
axes[2].set_aspect('auto')

plt.tight_layout()
plt.show()



#Problem 1
import numpy as np
import sys

# sys.path.append('../')
# import my_functions_lib as mfl


filename = 'MIST_v1.2_feh_m1.75_afe_p0.0_vvcrit0.4_HST_WFPC2.iso.cmd'

## # Col.  9: F336W calibrated magnitude
## # Col. 15: F438W calibrated magnitude
## # Col. 27: F814W calibrated magnitude
## # Col. 33: membership probability

blue, green, red, probability = np.loadtxt(filename, usecols=(8, 14, 26, 32), unpack=True)

print("len(green): ", len(green))


# Load the file
file_path = 'data.txt'
data = np.loadtxt(file_path)

# Display the loaded data
print(data)

#Problem 1
import numpy as np
import sys
import matplotlib.pyplot as plt

mist = 'MIST_v1.2_feh_m1.75_afe_p0.0_vvcrit0.4_HST_WFPC2.iso.cmd'
ngc = 'NGC6341.dat'

blue_mist, green_mist, red_mist, probability_mist = np.loadtxt(mist, usecols=(range(1,23)), unpack=True)
blue_ngc, green_ngc, red_ngc, probability_ngc= np.loadtxt(ngc, delimiter=',', skiprows=1)
ngc_data=blue_ngc, green_ngc, red_ngc, probability_ngc
id_ngc, blue_ngc, green_ngc, red_ngc = ngc_data[:, 0], ngc_data[:, 1], ngc_data[:, 2], ngc_data[:, 3]


plt.figure(figsize=(10, 6))
plt.scatter(blue_mist - green_mist, green_mist, c='blue', label='MIST Data', alpha=0.5)
plt.scatter(blue_ngc - green_ngc, green_ngc, c='red', label='NGC Data', alpha=0.5)

plt.xlabel('Blue - Green')
plt.ylabel('Green')
plt.title('MIST Data vs NGC Data')
plt.legend()
plt.grid(True)





#Problem 3

filename = 'sunspots.txt' 
data = np.loadtxt(filename)
months = data[:, 0]
sunspots = data[:, 1]

plt.figure(figsize=(10, 6))
plt.plot(months, sunspots, label='Sunspots')
plt.xlabel('Months')
plt.ylabel('Number of Sunspots')
plt.title('Sunspots')
plt.legend()
plt.grid(True)
plt.show()






#Problem 0
import pandas as pd

filename = 'NGC6341.dat'

df = pd.read_csv(filename, delim_whitespace=True, header=None, comment='#')

blue = df[8] 
green = df[14] 
red = df[26] 

blue = blue.to_numpy()
green = green.to_numpy()
red = red.to_numpy()

plt.figure(figsize=(10, 6))
plt.scatter(blue - green, green - red, c='blue', label='Data Points', alpha=0.5)
plt.xlabel('Blue - Green')
plt.xscale('log')
plt.ylabel('Green - Red')
plt.yscale('log')
plt.title('Plot of Data Points')
plt.legend()
plt.grid(True)
plt.show()




#problem 4
#Git status
#Git add Homework_2_Galbraith.py
#Git commit -m "MESSAGE ABOUT FILE"
#Git pull origin main
#Git push origin main

#cd repository
#rm -rf .git
#Ls -a

